<UserControl x:Class="LoRaMoteConfig.Controls.MacLayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local.ValidationTypes="clr-namespace:LoRaMoteConfig.ValidationTypes"
             xmlns:local.TypeConverters="clr-namespace:LoRaMoteConfig.TypeConverters"
             xmlns:local.Controls="clr-namespace:LoRaMoteConfig.Controls"
             xmlns:local.Enums="clr-namespace:LoRaMoteConfig.Enums"
             xmlns:local.Properties="clr-namespace:LoRaMoteConfig.Properties"
             xmlns:ValidationTypes="clr-namespace:LoRaMoteConfig.ValidationTypes"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mdt="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
             Height="610" Width="580">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      <local.TypeConverters:NotBooleanToVisibilityConverter x:Key="NotBooleanToVisibilityConverter"/>
      <local.TypeConverters:NotBooleanConverter x:Key="NotBooleanConverter"/>
      <ObjectDataProvider x:Key="Datarates" MethodName="GetValues" ObjectType="{x:Type s:Enum}">
        <ObjectDataProvider.MethodParameters>
          <x:Type TypeName="local.Enums:Datarates"/>
        </ObjectDataProvider.MethodParameters>
      </ObjectDataProvider>
      <ObjectDataProvider x:Key="Powers" MethodName="GetValues" ObjectType="{x:Type s:Enum}">
        <ObjectDataProvider.MethodParameters>
          <x:Type TypeName="local.Enums:Powers"/>
        </ObjectDataProvider.MethodParameters>
      </ObjectDataProvider>
      <ObjectDataProvider x:Key="DeviceClasses" MethodName="GetValues" ObjectType="{x:Type s:Enum}">
        <ObjectDataProvider.MethodParameters>
          <x:Type TypeName="local.Enums:DeviceClasses"/>
        </ObjectDataProvider.MethodParameters>
      </ObjectDataProvider>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <StackPanel Margin="3">
    <StackPanel Orientation="Vertical">
      <StackPanel Orientation="Horizontal"
                  Visibility="{Binding DevClassVisibility, Source={x:Static local.Properties:Settings.Default}, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Label Content="Device class:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <ComboBox SelectionChanged="cBoxDeviceClass_SelectionChanged" Name="cBoxDeviceClass" Width="105"
                  SelectedIndex="0" Margin="3" ItemsSource="{Binding Source={StaticResource DeviceClasses}}"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal">
        <Label Content="Tx power:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <ComboBox SelectionChanged="cBoxTxPower_SelectionChanged" Name="cBoxTxPower" Width="105" SelectedIndex="0"
                  Margin="3" ItemsSource="{Binding Source={StaticResource Powers}}"/>
        <Label Content="dBm" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"/>
      </StackPanel>
      <StackPanel Name="pnlAdr" Orientation="Horizontal">
        <Label Content="ADR:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" MinWidth="150"/>
        <StackPanel Orientation="Horizontal">
          <RadioButton Checked="rBtnAdr_Checked" Name="rBtnAdrOn" Content="ON" Margin="3"/>
          <RadioButton Checked="rBtnAdr_Checked" Name="rBtnAdrOff" Content="OFF" Margin="3" IsChecked="True"/>
        </StackPanel>
        <Path Name="imgAdrWarning" Width="24" Height="24" Visibility="Hidden" Stretch="Uniform"
              Data="{StaticResource PathWarning}" Fill="{StaticResource SecondaryAccentBrush}"
              ToolTipService.ShowOnDisabled="true"
              ToolTip="Please note that when ADR is enabled the end-device must be static."/>
      </StackPanel>
      <StackPanel Name="pnlDatarate" Orientation="Horizontal">
        <Label Content="Datarate:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <ComboBox SelectionChanged="cBoxDatarate_SelectionChanged" Name="cBoxDatarate" Width="105" SelectedIndex="0"
                  Margin="3" ItemsSource="{Binding Source={StaticResource Datarates}}"/>
      </StackPanel>
      <StackPanel Name="pnlDatarateRadioCoverageTester" Orientation="Horizontal" Visibility="Collapsed">
        <Label Content="Datarate:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <ComboBox Name="cBoxDatarate1" IsEnabled="false" Width="105" SelectedIndex="5" Margin="3"
                  ItemsSource="{Binding Source={StaticResource Datarates}}"/>
        <ComboBox Name="cBoxDatarate2" IsEnabled="false" Width="105" SelectedIndex="2" Margin="3"
                  ItemsSource="{Binding Source={StaticResource Datarates}}"/>
        <ComboBox Name="cBoxDatarate3" IsEnabled="false" Width="105" SelectedIndex="0" Margin="3"
                  ItemsSource="{Binding Source={StaticResource Datarates}}"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal">
        <Label Content="Channel mask [HEX]:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxChannelMask5" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="50" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:MaskValidationRule ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxChannelMask4" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="50" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:MaskValidationRule ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxChannelMask3" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="50" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:MaskValidationRule ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxChannelMask2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="50" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:MaskValidationRule ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxChannelMask1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="50" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:MaskValidationRule ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxChannelMask0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="50" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:MaskValidationRule ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
      </StackPanel>
      <StackPanel Orientation="Horizontal" Visibility="Visible">
        <Label Content="Transmission redundancy:" VerticalAlignment="Center" HorizontalAlignment="Center"
               Margin="3" MinWidth="150"/>
        <TextBox LostFocus="tBox_LostFocus" GotFocus="tBox_GotFocus" Validation.Error="tBox_Error"
                 Binding.TargetUpdated="tBox_BindingTargetUpdated" Binding.SourceUpdated="tBox_BindingSourceUpdated"
                 Name="tBoxNbTrans" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                 Width="105" Margin="3,5,3,10" HorizontalAlignment="Center" VerticalAlignment="Center">
          <TextBox.Text>
            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="true"
                     NotifyOnSourceUpdated="true" NotifyOnTargetUpdated="true">
              <Binding.ValidationRules>
                <ValidationTypes:NumericValidationRule Min="1" Max="15" Default="1" ValidatesOnTargetUpdated="true"/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
      </StackPanel>
      <StackPanel Name="pnlDutyCycle" Orientation="Horizontal">
        <Label Content="EU868 PHY duty cycle:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <StackPanel Orientation="Horizontal">
          <RadioButton Checked="rBtnDutyCycle_Checked" Name="rBtnDutyCycleOn" Content="ON" Margin="3" IsChecked="True"/>
          <RadioButton Checked="rBtnDutyCycle_Checked" Name="rBtnDutyCycleOff" Content="OFF" Margin="3"/>
        </StackPanel>
        <Path Name="imgDcWarning" Width="24" Height="24" Visibility="Hidden" Stretch="Uniform"
              Data="{StaticResource PathWarning}" Fill="{StaticResource SecondaryAccentBrush}"
              ToolTipService.ShowOnDisabled="true"
              ToolTip="Please note that ETSI mandates duty cycled transmissions. Use only for test purposes."/>
      </StackPanel>
      <StackPanel Name="pnlNetworkType" Orientation="Horizontal">
        <Label Content="Network type:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <StackPanel Orientation="Horizontal">
          <RadioButton Checked="rBtnNetworkType_Checked" Name="rBtnPublicNetwork" Content="Public" Margin="3"
                       IsChecked="True"/>
          <RadioButton Checked="rBtnNetworkType_Checked" Name="rBtnPrivateNetwork" Content="Private" Margin="3"/>
        </StackPanel>
      </StackPanel>
      <GroupBox Name="gBoxRx2Channel" Header="Rx2 Channel" Margin="-1">
        <StackPanel Orientation="Vertical">
          <StackPanel Orientation="Horizontal">
            <Label Content="Frequency:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,3,3,3"
                   MinWidth="150"/>
            <controls:NumericUpDown ValueChanged="nuRx2ChannelFrequency_ValueChanged" Name="nuRx2ChannelFrequency" Margin="3"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                    Maximum="1200.000" Minimum="0.0006" Interval="0.0001" StringFormat="0.0###" Value="868.1"
                                    MinWidth="110"/>
            <Label Content="MHz" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"/>
          </StackPanel>
          <StackPanel Orientation="Horizontal">
            <Label Content="Datarate:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,3,3,3"
                   MinWidth="151"/>
            <ComboBox SelectionChanged="tBoxRx2ChannelDatarate_SelectionChanged" Name="cBoxRx2ChannelDatarate"
                      Width="105" SelectedIndex="0" Margin="3" ItemsSource="{Binding Source={StaticResource Datarates}}"/>
          </StackPanel>
        </StackPanel>
      </GroupBox>
      <StackPanel Orientation="Horizontal" Visibility="Collapsed">
        <Label Content="Max Rx window:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"
               MinWidth="150"/>
        <controls:NumericUpDown ValueChanged="nuDelay_ValueChanged" Name="nuMaxRxWindow" Margin="3" HorizontalAlignment="Center"
                                VerticalAlignment="Center" VerticalContentAlignment="Center" Maximum="4294.0" Minimum="0.0"
                                Interval="0.1" StringFormat="0.0" Value="1.0" MinWidth="110"/>
        <Label Content="s" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal">
        <Label Content="Receive delay 1:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"
               MinWidth="150"/>
        <controls:NumericUpDown ValueChanged="nuDelay_ValueChanged" Name="nuReceiveDelay1" Margin="3,2"
                                HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                Maximum="4294.0" Minimum="0.0" Interval="0.1" StringFormat="0.0" Value="1.0" MinWidth="110"/>
        <Label Content="s" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal">
        <Label Content="Receive delay 2:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"
               MinWidth="150"/>
        <controls:NumericUpDown ValueChanged="nuDelay_ValueChanged" Name="nuReceiveDelay2" Margin="3,2"
                                HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                Maximum="4294.0" Minimum="0.0" Interval="0.1" StringFormat="0.0" Value="1.0" MinWidth="110"/>
        <Label Content="s" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal">
        <Label Content="Join accept delay 1:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"
               MinWidth="150"/>
        <controls:NumericUpDown ValueChanged="nuDelay_ValueChanged" Name="nuJoinAcceptDelay1" Margin="3,2"
                                HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                Maximum="4294.0" Minimum="0.0" Interval="0.1" StringFormat="0.0" Value="1.0" MinWidth="110"/>
        <Label Content="s" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal">
        <Label Content="Join accept delay 2:" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"
               MinWidth="150"/>
        <controls:NumericUpDown ValueChanged="nuDelay_ValueChanged" Name="nuJoinAcceptDelay2" Margin="3,2"
                                HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                Maximum="4294.0" Minimum="0.0" Interval="0.1" StringFormat="0.0" Value="1.0" MinWidth="110"/>
        <Label Content="s" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2"/>
      </StackPanel>
    </StackPanel>
  </StackPanel>
</UserControl>